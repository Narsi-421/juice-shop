    - name: Fetch Dependabot Alerts
      run: |
        curl -s -H "Authorization: token ${{ secrets.GH_SECURITY_TOKEN }}" \
             -H "Accept: application/vnd.github+json" \
             https://api.github.com/repos/${{ github.repository }}/dependabot/alerts \
             -o raw-dependabot-alerts.json

    - name: Convert Dependabot Alerts to DefectDojo CSV
      run: |
        echo '"Title","CWE ID","Severity","Description","Mitigation","Impact","References","File Path","Line Number","Component Name","Component Version"' > dependabot.csv
        python3 <<EOF
import json
import csv

with open("raw-dependabot-alerts.json") as f:
    alerts = json.load(f)

with open("dependabot.csv", "a") as out:
    writer = csv.writer(out)
    for alert in alerts:
        advisory = alert.get("security_advisory", {})
        vuln = alert.get("security_vulnerability", {})
        writer.writerow([
            advisory.get("summary", "N/A"),
            "N/A",
            vuln.get("severity", "UNKNOWN"),
            advisory.get("description", "N/A").replace('\n', ' '),
            "Upgrade dependency",
            "May allow exploitation",
            advisory.get("references", [{}])[0].get("url", "https://github.com"),
            alert.get("vulnerable_manifest_path", ""),
            "",
            vuln.get("package", {}).get("name", "N/A"),
            vuln.get("package", {}).get("ecosystem", "N/A")
        ])
EOF

    - name: Upload Dependabot to DefectDojo
      run: |
        curl -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
          -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
          -F "scan_type=Generic Findings Import" \
          -F "engagement=4" \
          -F "file=@dependabot.csv" \
          -F "active=true" \
          -F "verified=true"
