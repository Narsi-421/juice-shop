name: âœ…ðŸ”„ðŸ“¦ Sending Dependabot Security Updates

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 2 * * *'  # Optional: Runs daily at 2 AM UTC

permissions:
  contents: read

env:
  DEFECTDOJO_PRODUCT_NAME: Owasp-juice-shop
  DEFECTDOJO_URL: ${{ secrets.DEFECTDOJO_URL_ngrok }}  # ðŸ‘ˆ Use ngrok secret here
  ENGAGEMENT_ID: 4

jobs:
  import_dependabot_security_updates:
    name: Import Dependabot security updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch Dependabot Alerts from GitHub API
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/dependabot/alerts \
               -o raw-dependabot-alerts.json

      - name: Convert Dependabot Alerts to CSV for DefectDojo
        run: |
          python3 <<EOF
          import json, csv
          with open("raw-dependabot-alerts.json") as f:
              alerts = json.load(f)
          with open("dependabot.csv", "w") as out:
              writer = csv.writer(out)
              writer.writerow(["Vulnerability ID", "Package", "Severity", "URL", "Summary"])
              for alert in alerts:
                  writer.writerow([
                      alert.get("security_advisory", {}).get("ghsa_id", "N/A"),
                      alert.get("security_vulnerability", {}).get("package", {}).get("name", "N/A"),
                      alert.get("security_vulnerability", {}).get("severity", "UNKNOWN"),
                      alert.get("html_url", ""),
                      alert.get("security_advisory", {}).get("summary", "")
                  ])
          EOF

      - name: Upload CSV to DefectDojo
        run: |
          curl -X POST "${{ env.DEFECTDOJO_URL }}/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
            -F "engagement=${{ env.ENGAGEMENT_ID }}" \
            -F "scan_type=Generic Findings Import" \
            -F "file=@dependabot.csv" \
            -F "product_name=${{ env.DEFECTDOJO_PRODUCT_NAME }}" \
            -F "active=true" \
            -F "verified=true"
