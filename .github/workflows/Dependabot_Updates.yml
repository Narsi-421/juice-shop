name: Send Dependabot Alerts to DefectDojo

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  DEFECTDOJO_PRODUCT_NAME: Owasp-juice-shop
  DEFECTDOJO_URL_ngrok: ${{ secrets.DEFECTDOJO_URL_ngrok }}/api/v2
  ENGAGEMENT_ID: 4

jobs:
  upload_dependabot:
    runs-on: ubuntu-latest

    steps:
      - name: Set repository name
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Fetch Dependabot alerts via GitHub API
        run: |
          curl -s -H "Authorization: token ${{ secrets.GH_SECURITY_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/dependabot/alerts \
               -o dependabot-raw.json

      - name: Convert alerts to JSON format for DefectDojo
        run: |
          python3 <<EOF
          import json
          from datetime import datetime

          with open("dependabot-raw.json") as f:
              alerts = json.load(f)

          findings = []
          for alert in alerts:
              sa = alert.get("security_advisory", {})
              sv = alert.get("security_vulnerability", {})
              pkg = sv.get("package", {}).get("name", "unknown")
              severity = sv.get("severity", "Medium")
              summary = sa.get("summary", "No summary")
              description = sa.get("description", "")
              cwe = sa.get("cwes", [{}])[0].get("cwe_id", 1035)
              refs = ", ".join(r.get("url", "") for r in sa.get("references", []))
              vuln_range = sv.get("vulnerable_version_range", "")
              path = alert.get("dependency", {}).get("manifest_path", "")

              findings.append({
                  "title": f"{pkg} - {summary}",
                  "description": description,
                  "severity": severity,
                  "mitigation": "Update to a safe version",
                  "impact": "May allow exploitation",
                  "references": refs,
                  "component_name": pkg,
                  "component_version": vuln_range,
                  "file_path": path,
                  "date": str(datetime.today().date()),
                  "cwe": cwe
              })

          with open("dependabot-security-alerts.json", "w") as out:
              json.dump({"findings": findings}, out, indent=2)
          EOF

      - name: Upload JSON to DefectDojo
        run: |
          curl -X POST "${{ env.DEFECTDOJO_URL_ngrok }}/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
            -F "product_name=${{ env.DEFECTDOJO_PRODUCT_NAME }}" \
            -F "engagement=${{ env.ENGAGEMENT_ID }}" \
            -F "scan_type=Github Vulnerability Scan" \
            -F "file=@dependabot-security-alerts.json" \
            -F "active=true" \
            -F "verified=true"
