name: Send Dependabot Alerts to DefectDojo

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  DEFECTDOJO_PRODUCT_NAME: Owasp-juice-shop
  DEFECTDOJO_URL_ngrok: ${{ secrets.DEFECTDOJO_URL_ngrok }}/api/v2
  ENGAGEMENT_ID: 4

jobs:
  upload_dependabot:
    runs-on: ubuntu-latest

    steps:
      - name: Extract repository name
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Fetch Dependabot Alerts using REST API
        run: |
          curl -s -H "Authorization: token ${{ secrets.GH_SECURITY_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               https://api.github.com/repos/${{ github.repository }}/dependabot/alerts \
               -o dependabot-raw.json

      - name: Convert Dependabot Alerts to DefectDojo CSV
        run: |
          python3 <<EOF
          import json, csv

          with open("dependabot-raw.json") as f:
              alerts = json.load(f)

          with open("dependabot.csv", "w") as out:
              writer = csv.writer(out)
              writer.writerow(["Title", "CWE ID", "Severity", "Description", "Mitigation",
                               "Impact", "References", "File Path", "Line Number", "Component Name", "Component Version","Date"])
              for alert in alerts:
                  sa = alert.get("security_advisory", {})
                  sv = alert.get("security_vulnerability", {})
                  pkg = sv.get("package", {}).get("name", "unknown")
                  severity = sv.get("severity", "Medium")
                  cwe = sa.get("cwes", [{}])[0].get("cwe_id", "1035")
                  summary = sa.get("summary", "No summary")
                  description = sa.get("description", "")
                  references = sa.get("references", [{}])[0].get("url", "")
                  path = alert.get("dependency", {}).get("manifest_path", "")
                  req = sv.get("vulnerable_version_range", "")

                  writer.writerow([
                      f"{pkg} - {summary}",
                      cwe,
                      severity,
                      description,
                      "Update to safe version",
                      "May allow exploitation",
                      references,
                      path,
                      "", pkg, req
                  ])
          EOF

      - name: Upload CSV to DefectDojo
        run: |
          curl -X POST "${{ env.DEFECTDOJO_URL_ngrok }}/import-scan/" \
            -H "Authorization: Token ${{ secrets.DEFECTDOJO_API_TOKEN }}" \
            -F "product_name=${{ env.DEFECTDOJO_PRODUCT_NAME }}" \
            -F "engagement=${{ env.ENGAGEMENT_ID }}" \
            -F "scan_type=Generic Findings Import" \
            -F "file=@dependabot.csv" \
            -F "active=true" \
            -F "verified=true"
